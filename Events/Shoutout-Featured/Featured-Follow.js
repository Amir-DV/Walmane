const {
    Events,
    ButtonInteraction,
    EmbedBuilder,
    Client,
} = require('discord.js')

const { GoogleSpreadsheet } = require('google-spreadsheet')
const { JWT } = require('google-auth-library')

const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: 'walmanesheet@optimal-tide-371213.iam.gserviceaccount.com',
    key: '-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCizLBQXhGsgJBn\nnvBy1gHNpH1BR6nYTHOK7u8TY6LEJyu9Zjo/QG0Z+eLMnyhp9E9+7UQkyPcev+fO\n7RTkBPvPDuO9Yen5f7mdZkIZdL9ZNzKprMgAYFPYw7Rd2BbBCQ/3uiXaVWItjPnF\n/IEX4RB0i/9yp+kSyIoetbMOWZ3LSi6SdKojp+CJWhfrLRH/osAs469g6IrY+i2z\nX1GhL3v1rdJSw/qBW0XR9ASA0me3Pa9iv84pCkFTwEGQMgJNVvB5HScBWpWQEClh\nsv1591h7usYmvFr0ZT2Xb2qzoSMqx7uaf5vhHeknGnz/91k1qvd1DJQyJVJ4USuQ\n4eNWERQxAgMBAAECggEAELC1PUINpA6or1ToQA+wbuOnmz0UfLpGyLY7ALUA64T8\nCx57R3+Mh+KaZcHF8Anl6gR7bV2El0yToH9mGkPoCHf1cXWjugpmDkzc5zT0xpnd\n+e7+sKovgmw69jmIiKkMD+jPx2jkSDj5JPsAhaETca1mJpwwDRbN8TzN0wFtR9lk\n24tDOkLcqExdUqoY6P5olEKqdchy1YOdaqFBa1Td/mfeEsqV9Q10NZgnOARmvGjG\nQS1BSaoBHceCYILBl86/WsIBKT1Jn1ILkC5bl/Iw1pJcUHqRaHKT0Vidu+DD5jIb\n99Vap8dyG+uoiBIiR7DqR34ru3Wbquw3WhOikgwruQKBgQDQPjL/HWsA/EDWCtMn\nhhSCcF/dPIQVn2Rn4f4+Jm26n/ekhs2o6ARg3UuvVvEBie6mviPquiOa0K4/UX2F\nHxBgbG9lEJ7cRoHwkjZT+M6BdpMAE8WwwrhOaWvOkOJqSvr/M47lAGKZP0sjYxIm\n11Ml5tQyO5/kcfGM8CLK5NooeQKBgQDIIonyLaBuXTzIT+Mhm/HJ0ygxPujsWd+U\nBO8EXACxAxzUiGqOq6ypH/I7rTjAcTIlgIf2bhDe4c4jmiYKyao030WRKTdUqCaV\nztP07eyOnff3HfIv+4YvMrjgE22d+KCc4A2U3zG6CHs/UGP2NT417aDrj988NyNz\nlLsNFLzLeQKBgH+8J3vlh6VrFjo1GaC81gfM9oC2hi7dPrGaJmHpIJXBWh5Jsg1R\nhJ4GIE7Ffb/746/UIiPxWbW1G60rR1tI2rrKyOmtcESd20a96SVJESLIoRMDDdiH\nGJbAg6iJpticdank7ln6CoEGGgjy1EeO/SnalX7apBF08z4Ibs8V4dvBAoGBAL6w\niheCedYuaHfEBnpDiAHxe95QPsbUaz8x5DuXHeGLQbEPudfuozkSA0/xIJ3cPReW\ne/XFsbVsGWm6unyU4eQ2yKYjS2ESRpF+3F4HRNoukdGXaudlFNlrztNSL6PQ/df7\nc3VhpJPI+QW+p0A0Qu5HWIiaMO3C67h5AjDYjXqhAoGBAM+f0HmqSP9ZjY5izzsE\nrt3YQ5QBKCFsOt21blOY9P0oJRJMObWytsL24u5Ytrtiy9GARCIJUj69D3Sva5rL\n7vGj+onGQZJgacNZGvQhc03T/XgdF1ivt5X7FV5VtM4CvggfWlLN0OANiOXEnRM3\nglQgUiOPvN2D0vE6YcRg04Bq\n-----END PRIVATE KEY-----\n',
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
})
const doc = new GoogleSpreadsheet(
    '1Y48exFu2csCHsNyLHyxL6blKNLaulhMvuP57U69PQNQ',
    serviceAccountAuth,
)
module.exports = {
    name: Events.InteractionCreate,
    /**
     *
     * @param {ButtonInteraction} interaction
     * @param {Client} client
     * @returns
     */
    async execute(interaction, client) {
        if (!interaction.isButton()) return

        await doc.loadInfo()
        const rostersheet = doc.sheetsById[1883244075] // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
        await rostersheet.loadCells('A1:G6')
        if (
            ![
                `${rostersheet.getCellByA1(`A6`).value}`,
                `${rostersheet.getCellByA1(`B6`).value}`,
                `${rostersheet.getCellByA1(`C6`).value}`,
                `${rostersheet.getCellByA1(`D6`).value}`,
                `${rostersheet.getCellByA1(`E6`).value}`,
                `${rostersheet.getCellByA1(`F6`).value}`,
                `${rostersheet.getCellByA1(`G6`).value}`,
            ].includes(interaction.customId)
        )
            return

        await interaction.deferReply({ ephemeral: true })

        const roleID = interaction.customId
        const roleBadge = interaction.guild.roles.cache.find(
            (role) => role.id === roleID,
        )

        const Ch_Log = interaction.guild.channels.cache.get(
            '1202976505542615140',
        )
        if (roleBadge) {
            if (interaction.member.roles.cache.has(roleBadge.id)) {
                interaction.member.roles.remove(roleBadge.id)
                successInteraction(
                    interaction,
                    `You Have Successfully Unfollowed That Organizer.`,
                )
                const Embed = new EmbedBuilder()
                    .setTitle('⏰Featured Follow Log⏰')
                    .setDescription(
                        `<@${interaction.user.id}> Unfollowed <@&${roleBadge.id}> With Featured Button`,
                    )
                Ch_Log.send({
                    embeds: [Embed],
                })
            } else {
                interaction.member.roles.add(roleBadge.id)
                successInteraction(
                    interaction,
                    `You Have Successfully Followed That Organizer.`,
                )
                const Embed = new EmbedBuilder()
                    .setTitle('⏰Featured Follow Log⏰')
                    .setDescription(
                        `<@${interaction.user.id}> Followed <@&${roleBadge.id}> With Featured Button`,
                    )
                Ch_Log.send({
                    embeds: [Embed],
                })
            }
        }
    },
}

function successInteraction(interaction, description) {
    interaction.editReply({
        embeds: [
            new EmbedBuilder()
                .setColor('Green')
                .setDescription(` - ${description}`),
        ],
    })
}
