const {
    Events,
    ButtonInteraction,
    EmbedBuilder,
    Client,
} = require('discord.js')

const { GoogleSpreadsheet } = require('google-spreadsheet')
const { JWT } = require('google-auth-library')

const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: 'email',
    key: 'key'
})
const doc = new GoogleSpreadsheet(
    'doc',
    serviceAccountAuth,
)
module.exports = {
    name: Events.InteractionCreate,
    /**
     *
     * @param {ButtonInteraction} interaction
     * @param {Client} client
     * @returns
     */
    async execute(interaction, client) {
        if (!interaction.isButton()) return

        await doc.loadInfo()
        const rostersheet = doc.sheetsById[1883244075] // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
        await rostersheet.loadCells('A1:G6')
        if (
            ![
                `${rostersheet.getCellByA1(`A6`).value}`,
                `${rostersheet.getCellByA1(`B6`).value}`,
                `${rostersheet.getCellByA1(`C6`).value}`,
                `${rostersheet.getCellByA1(`D6`).value}`,
                `${rostersheet.getCellByA1(`E6`).value}`,
                `${rostersheet.getCellByA1(`F6`).value}`,
                `${rostersheet.getCellByA1(`G6`).value}`,
            ].includes(interaction.customId)
        )
            return

        await interaction.deferReply({ ephemeral: true })

        const roleID = interaction.customId
        const roleBadge = interaction.guild.roles.cache.find(
            (role) => role.id === roleID,
        )

        const Ch_Log = interaction.guild.channels.cache.get(
            '1202976505542615140',
        )
        if (roleBadge) {
            if (interaction.member.roles.cache.has(roleBadge.id)) {
                interaction.member.roles.remove(roleBadge.id)
                successInteraction(
                    interaction,
                    `You Have Successfully Unfollowed That Organizer.`,
                )
                const Embed = new EmbedBuilder()
                    .setTitle('⏰Featured Follow Log⏰')
                    .setDescription(
                        `<@${interaction.user.id}> Unfollowed <@&${roleBadge.id}> With Featured Button`,
                    )
                Ch_Log.send({
                    embeds: [Embed],
                })
            } else {
                interaction.member.roles.add(roleBadge.id)
                successInteraction(
                    interaction,
                    `You Have Successfully Followed That Organizer.`,
                )
                const Embed = new EmbedBuilder()
                    .setTitle('⏰Featured Follow Log⏰')
                    .setDescription(
                        `<@${interaction.user.id}> Followed <@&${roleBadge.id}> With Featured Button`,
                    )
                Ch_Log.send({
                    embeds: [Embed],
                })
            }
        }
    },
}

function successInteraction(interaction, description) {
    interaction.editReply({
        embeds: [
            new EmbedBuilder()
                .setColor('Green')
                .setDescription(` - ${description}`),
        ],
    })
}
