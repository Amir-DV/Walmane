const {
  Client,
  Events,
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder,
} = require("discord.js");
const mongoose = require("mongoose");
const cron = require("cron");
const { GoogleSpreadsheet } = require("google-spreadsheet");
const { JWT } = require("google-auth-library");
const { mongodb } = require("../../config.json");
// const communityRules = require('../../Models/communityRules')

// const natural = require('natural')
// const tokenizer = new natural.WordTokenizer()

const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: "walmanesheet@optimal-tide-371213.iam.gserviceaccount.com",
  key: "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCizLBQXhGsgJBn\nnvBy1gHNpH1BR6nYTHOK7u8TY6LEJyu9Zjo/QG0Z+eLMnyhp9E9+7UQkyPcev+fO\n7RTkBPvPDuO9Yen5f7mdZkIZdL9ZNzKprMgAYFPYw7Rd2BbBCQ/3uiXaVWItjPnF\n/IEX4RB0i/9yp+kSyIoetbMOWZ3LSi6SdKojp+CJWhfrLRH/osAs469g6IrY+i2z\nX1GhL3v1rdJSw/qBW0XR9ASA0me3Pa9iv84pCkFTwEGQMgJNVvB5HScBWpWQEClh\nsv1591h7usYmvFr0ZT2Xb2qzoSMqx7uaf5vhHeknGnz/91k1qvd1DJQyJVJ4USuQ\n4eNWERQxAgMBAAECggEAELC1PUINpA6or1ToQA+wbuOnmz0UfLpGyLY7ALUA64T8\nCx57R3+Mh+KaZcHF8Anl6gR7bV2El0yToH9mGkPoCHf1cXWjugpmDkzc5zT0xpnd\n+e7+sKovgmw69jmIiKkMD+jPx2jkSDj5JPsAhaETca1mJpwwDRbN8TzN0wFtR9lk\n24tDOkLcqExdUqoY6P5olEKqdchy1YOdaqFBa1Td/mfeEsqV9Q10NZgnOARmvGjG\nQS1BSaoBHceCYILBl86/WsIBKT1Jn1ILkC5bl/Iw1pJcUHqRaHKT0Vidu+DD5jIb\n99Vap8dyG+uoiBIiR7DqR34ru3Wbquw3WhOikgwruQKBgQDQPjL/HWsA/EDWCtMn\nhhSCcF/dPIQVn2Rn4f4+Jm26n/ekhs2o6ARg3UuvVvEBie6mviPquiOa0K4/UX2F\nHxBgbG9lEJ7cRoHwkjZT+M6BdpMAE8WwwrhOaWvOkOJqSvr/M47lAGKZP0sjYxIm\n11Ml5tQyO5/kcfGM8CLK5NooeQKBgQDIIonyLaBuXTzIT+Mhm/HJ0ygxPujsWd+U\nBO8EXACxAxzUiGqOq6ypH/I7rTjAcTIlgIf2bhDe4c4jmiYKyao030WRKTdUqCaV\nztP07eyOnff3HfIv+4YvMrjgE22d+KCc4A2U3zG6CHs/UGP2NT417aDrj988NyNz\nlLsNFLzLeQKBgH+8J3vlh6VrFjo1GaC81gfM9oC2hi7dPrGaJmHpIJXBWh5Jsg1R\nhJ4GIE7Ffb/746/UIiPxWbW1G60rR1tI2rrKyOmtcESd20a96SVJESLIoRMDDdiH\nGJbAg6iJpticdank7ln6CoEGGgjy1EeO/SnalX7apBF08z4Ibs8V4dvBAoGBAL6w\niheCedYuaHfEBnpDiAHxe95QPsbUaz8x5DuXHeGLQbEPudfuozkSA0/xIJ3cPReW\ne/XFsbVsGWm6unyU4eQ2yKYjS2ESRpF+3F4HRNoukdGXaudlFNlrztNSL6PQ/df7\nc3VhpJPI+QW+p0A0Qu5HWIiaMO3C67h5AjDYjXqhAoGBAM+f0HmqSP9ZjY5izzsE\nrt3YQ5QBKCFsOt21blOY9P0oJRJMObWytsL24u5Ytrtiy9GARCIJUj69D3Sva5rL\n7vGj+onGQZJgacNZGvQhc03T/XgdF1ivt5X7FV5VtM4CvggfWlLN0OANiOXEnRM3\nglQgUiOPvN2D0vE6YcRg04Bq\n-----END PRIVATE KEY-----\n",
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});

const doc = new GoogleSpreadsheet(
  "1Y48exFu2csCHsNyLHyxL6blKNLaulhMvuP57U69PQNQ",
  serviceAccountAuth
);
module.exports = {
  name: Events.ClientReady,
  once: true,
  /**
   *
   * @param {Client} client
   */
  async execute(client) {
    await mongoose.connect(mongodb || "");

    if (mongoose.connect) {
      console.log("Connected To Database✅");
    }

    console.log(`${client.user.username} Is Now Online✅`);

    let automatedMessage = new cron.CronJob("0,15,30,45 * * * *", async () => {
      await doc.loadInfo();
      const rostersheet = doc.sheetsById[506846413]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
      await rostersheet.loadCells("A1:F25");

      for (let row = 1; row <= 25; row++) {
        const channelID = rostersheet.getCellByA1(`B${row}`).value;
        const day = rostersheet.getCellByA1(`C${row}`).value;
        const timeHour = rostersheet.getCellByA1(`D${row}`).value;
        const timeMinute = rostersheet.getCellByA1(`E${row}`).value;
        const message = rostersheet.getCellByA1(`F${row}`).value;

        if (channelID && day && timeHour && timeMinute && message) {
          const dayOfWeek = new Date().getDay();
          const hourOfDay = new Date().getHours();
          const minuteOfDay = new Date().getMinutes();
          const Days = [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ];
          if (
            day === Days[dayOfWeek] &&
            timeHour === hourOfDay &&
            timeMinute === minuteOfDay
          ) {
            const targetChannel = client.channels.cache.get(`${channelID}`);
            targetChannel.send({ content: `${message}` });
          }
        }
      }
    });

    let scheduledMessage = new cron.CronJob("00 00 08 * * *", async () => {
      const dayOfWeek = new Date().getDay();
      const Days = [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ];
      let row;
      const featuredChannel = client.channels.cache.get("1260180621653835836");

      await doc.loadInfo();
      const rostersheet = doc.sheetsById[1883244075]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
      await rostersheet.loadCells("A1:M30");
      for (row = 0; row < 12; row++) {
        const RowAlph = ["C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M"];

        const DayCheck = rostersheet.getCellByA1(`${RowAlph[row]}20`);
        const Data = rostersheet.getCellByA1(`${RowAlph[row]}19`);
        if (Data.value) {
          if (DayCheck.value === Days[dayOfWeek] && Data) {
            const Data = rostersheet.getCellByA1(`${RowAlph[row]}19`);
            const Day = rostersheet.getCellByA1(`${RowAlph[row]}21`);
            const roleName = rostersheet.getCellByA1(`${RowAlph[row]}16`);
            const roleEmoji = rostersheet.getCellByA1(`${RowAlph[row]}17`);
            const roleID = rostersheet.getCellByA1(`${RowAlph[row]}18`);
            const customMessage = rostersheet.getCellByA1(`${RowAlph[row]}22`);
            const button = new ActionRowBuilder().setComponents(
              new ButtonBuilder()
                .setCustomId(`${roleID.value}`)
                .setStyle(ButtonStyle.Primary)
                .setLabel(`${roleName.value}`)
                .setEmoji(`${roleEmoji.value}`)
            );
            // const guild = client.guilds.cache.get("992300928067698759");
            // const dayRole = guild.roles.cache.find(
            //   (role) => role.name === Day.value
            // );

            featuredChannel.send({
              content: `### If you are looking for consistency and reliability try one of our featured runs.\n### These runs are led by vetted raid leads that support Wal-Mane.\n### Make sure you show them some love by signing up to one of their raids!\n\n# ${
                Day.value
              }\n${Data.value} \n\n${
                customMessage.value || ""
              }\n\n\n<@&${1237702575894167622}>\n<@&${1234618013148512297}>\n<@&${1234618322595614751}>\n<@&${1234618294242377759}>\n
              If you wanna directly follow their runs , press the button below to get their badge :)`,
              components: [button],
            });
          }
        }
      }
    });

    let scheduledMessageShoutout = new cron.CronJob(
      "00 00 08 * * 2",
      async () => {
        const shoutoutChannel = client.channels.cache.get("994056223861260398");
        var Tue = "";
        var Wed = "";
        var Thur = "";
        var Fri = "";
        var Sat = "";
        var Sun = "";
        var Mon = "";
        var MetaTue = "```yaml\nTuesday\n```";
        var MetaWed = "```yaml\nWednesday\n```";
        var MetaThur = "```yaml\nThursday\n```";
        var MetaFri = "```yaml\nFriday\n```";
        var MetaSat = "```yaml\nSaturday\n```";
        var MetaSun = "```yaml\nSunday\n```";
        var MetaMon = "```yaml\nMonday\n```";
        let row;

        await doc.loadInfo();

        const rostersheet = doc.sheetsById[566050980]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
        await rostersheet.loadCells("A2:G10");
        for (row = 2; row <= 7; row++) {
          const Tuesday = rostersheet.getCellByA1(`A${row}`);
          const Wednesday = rostersheet.getCellByA1(`B${row}`);
          const Thursday = rostersheet.getCellByA1(`C${row}`);

          if (Tuesday.value) {
            Tue = `${Tue}\n` + Tuesday.value;
          }
          if (Wednesday.value) {
            Wed = `${Wed}\n` + Wednesday.value;
          }
          if (Thursday.value) {
            Thur = `${Thur}\n` + Thursday.value;
          }
        }
        for (row = 2; row <= 7; row++) {
          const Friday = rostersheet.getCellByA1(`D${row}`);
          const Saturday = rostersheet.getCellByA1(`E${row}`);
          const Sunday = rostersheet.getCellByA1(`F${row}`);
          const Monday = rostersheet.getCellByA1(`G${row}`);

          if (Friday.value) {
            Fri = `${Fri}\n` + Friday.value;
          }
          if (Saturday.value) {
            Sat = `${Sat}\n` + Saturday.value;
          }
          if (Sunday.value) {
            Sun = `${Sun}\n` + Sunday.value;
          }
          if (Monday.value) {
            Mon = `${Mon}\n` + Monday.value;
          }
        }
        const Row1 = new ActionRowBuilder().setComponents(
          new ButtonBuilder()
            .setCustomId("tuesday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Tuesday"),
          new ButtonBuilder()
            .setCustomId("wednesday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Wednesday"),
          new ButtonBuilder()
            .setCustomId("thursday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Thursday"),
          new ButtonBuilder()
            .setCustomId("1212101463233265724")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Pop Up")
        );
        const Row2 = new ActionRowBuilder().setComponents(
          new ButtonBuilder()
            .setCustomId("friday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Friday"),
          new ButtonBuilder()
            .setCustomId("saturday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Saturday"),
          new ButtonBuilder()
            .setCustomId("sunday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Sunday"),
          new ButtonBuilder()
            .setCustomId("monday")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Monday"),
          new ButtonBuilder()
            .setCustomId("1212101463233265724")
            .setStyle(ButtonStyle.Primary)
            .setLabel("Pop Up")
        );
        shoutoutChannel.send({
          content: `New? Come check out some of these runs below and get started in Walmane. Confused about navigation? Check out <#1122782036348907640>!\n\n${MetaTue}${Tue}${MetaWed}${Wed}${MetaThur}${Thur}\n\n**Can't see the channels? Click these boxes below to receive a role!**`,
          components: [Row1],
        });
        shoutoutChannel.send({
          content: `${MetaFri}${Fri}${MetaSat}${Sat}${MetaSun}${Sun}${MetaMon}${Mon}\n\nEnjoying the server? Come show your support by boosting the discord or buying raffle tickets, benefits of doing these things can be found in https://discord.com/channels/992300928067698759/1175680867742515291/1175680867742515291\n**Can't see the channels? Click these boxes below to receive a role!**`,
          components: [Row2],
        });
      }
    );
    scheduledMessageShoutout.start();
    scheduledMessage.start();
    automatedMessage.start();
  },
};
